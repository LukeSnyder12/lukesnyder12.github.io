import Renderer from"/lib/Viz/2DRenderer.js";import Camera from"/lib/Viz/2DCamera.js";import CameraLineStrip2DAliveDeadObject from"/lib/DSViz/CameraLineStrip2DAliveDeadObject.js";import StandardTextObject from"/lib/DSViz/StandardTextObject.js";import PGA2D from"/lib/Math/PGA2D.js";import Standard2DPGACameraSceneObject from"/lib/DSViz/Standard2DPGACameraSceneObject.js";async function init(){const e=document.createElement("canvas");e.id="renderCanvas",document.body.appendChild(e);const a=new Renderer(e);await a.init();var o=new Float32Array([-.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5]);const t=new Camera,r=256,n=256,s=new CameraLineStrip2DAliveDeadObject(a._device,a._canvasFormat,t._pose,o,r,n,2,2);await a.appendSceneObject(s);var c=new Float32Array([1,0,0,0,.025,.025]),i=new Float32Array([-1,-1,1,0,0,1,1,-1,0,1,0,1,-1,1,0,0,1,1,1,1,1,0,1,1,-1,1,0,0,1,1,1,-1,0,1,0,1]);const d=new Standard2DPGACameraSceneObject(a._device,a._canvasFormat,t._pose,i,c);await a.appendSceneObject(d);var l=1,m=1/l,p=1e3*m,w=new StandardTextObject("fps: ??\nControls\nz/x: inc/dec fps\nr: play/pause\nc: reset\nq/e: zoom:\nwasd: move");let u=!1;var b=.05;window.addEventListener("keydown",(e=>{switch(e.key){case"ArrowUp":case"w":case"W":t.moveUp(b),s.updateCameraPose(),d.updateCameraPose();break;case"ArrowDown":case"s":case"S":t.moveDown(b),s.updateCameraPose(),d.updateCameraPose();break;case"ArrowLeft":case"a":case"A":t.moveLeft(b),s.updateCameraPose(),d.updateCameraPose();break;case"ArrowRight":case"d":case"D":t.moveRight(b),s.updateCameraPose(),d.updateCameraPose();break;case"q":case"Q":t.zoomIn(),s.updateCameraPose(),d.updateCameraPose();break;case"e":case"E":t.zoomOut(),s.updateCameraPose(),d.updateCameraPose();break;case"f":case"F":w.toggleVisibility();break;case"r":case"R":u=!u,console.log("isPlaying = "+u);break;case"z":case"Z":l--,p=1e3*(m=1/l),console.log("target fps = "+l);break;case"x":case"X":l++,p=1e3*(m=1/l),console.log("target fps = "+l);break;case"c":case"C":s.randomizeCells(),console.log("resetting sim")}}));let v=!1,C=[0,0];e.addEventListener("mousedown",(e=>{var a=e.clientX/window.innerWidth*2-1,o=-e.clientY/window.innerHeight*2+1;a/=t._pose[4],o/=t._pose[5];let r=PGA2D.applyMotorToPoint([a,o],[t._pose[0],t._pose[1],t._pose[2],t._pose[3]]),c=Math.floor((r[0]+1)/2*n)-128,i=Math.floor((r[1]+1)/2*n)-128;s.updateCellBuffer(c,i,1),console.log("(x,y) = "+a+o)})),e.addEventListener("mousemove",(e=>{var a=e.clientX/window.innerWidth*2-1,o=-e.clientY/window.innerHeight*2+1;a/=t._pose[4],o/=t._pose[5];let s=PGA2D.applyMotorToPoint([a,o],[t._pose[0],t._pose[1],t._pose[2],t._pose[3]]),i=Math.floor((s[0]+1)/2*n)-128,l=Math.floor((s[1]+1)/2*n)-128;if(console.log(`in cell (${i}, ${l})`),i>=0&&i<r&&l>=0&&l<n){let e=i/r*2-1+.00390625,a=l/r*2-1+.00390625;-.05+e<=s[0]&&s[0]<=.05+e&&-.05+a<=s[1]&&s[1]<=.05+a&&console.log(`boundary cell found, cell (${i}, ${l})`)}if(v){if(Math.sqrt(Math.pow(s[0]-C[0],2)+Math.pow(s[1]-C[1],2))>.001){let e=PGA2D.createTranslator((s[0]-C[0])/c[4],(s[1]-C[1])/c[5]),a=PGA2D.normaliozeMotor(PGA2D.geometricProduct(e,[c[0],c[1],c[2],c[3]]));c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],d.updateGeometry(),C=s}}})),e.addEventListener("mouseup",(e=>{v=!1}));var D,f=0;let P=()=>{let e=Date.now()-D;e>p&&(++f,D=Date.now()-e%p,a.render(u)),requestAnimationFrame(P)};return D=Date.now(),P(),setInterval((()=>{w.updateText("fps: "+f+"\nControls\nz/x: inc/dec fps\nr: play/pause\nc: reset\nq/e: zoom:\nwasd: move"),f=0}),1e3),a}init().then((e=>{console.log(e)})).catch((e=>{const a=document.createElement("p");a.innerHTML=navigator.userAgent+"</br>"+e.message,document.body.appendChild(a),document.getElementById("renderCanvas").remove()}));